name: Build and push tag as Docker image

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-docker-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        node-js-image-version: [20]
        subql-node-image-version: [v4.7.0]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set environmental variables
        id: env-vars
        run: |
          echo "FULL_IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-node-js-${{ matrix.node-js-image-version }}-subql-node-${{ matrix.subql-node-image-version }}" >> "$GITHUB_ENV"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: docker/subql-node-Dockerfile
          push: true
          load: true
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_JS_IMAGE_VERSION=${{ matrix.node-js-image-version }}-alpine
            SUBQL_NODE_IMAGE_VERSION=${{ matrix.subql-node-image-version }}
          tags: ${{ env.FULL_IMAGE_NAME }}
